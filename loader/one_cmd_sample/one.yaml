kind: OneExecute
store_import:
  enabled: true
  data:
    - key: "usersList"
      bucket_id: "bucketForApp"
      thread_only: true
      store_key: "users"
      encrypt:
        enabled: true
        encrypt_id: encryptDynamicCBC
type: http
output:
  enabled: true
  ids: 
    - outputLocalCSV
# output:
#   enabled: false
auth:
  enabled: true
  auth_id: authForWeb
request:
  target_id: "testServer"
  endpoint: "/posts"
  method: POST
  query_param: {}
  # path_variables:
  #   todo_id: "1"
  body_type: "json"
  body:
    i: {{ .Dynamic.LoopCount }}
{{- if .ThreadValues.usersList }}
{{- with index .ThreadValues.usersList .Dynamic.LoopCount }}
    userId: "{{ .uuid }}"
    name: "{{ .name }}"
    email: "{{ .email }}"
{{- end }}
{{- end }}
  response_type: "json"
  data:
    - key: "ID"
      extractor:
        type: "jmesPath"
        jmes_path: "id"
        # on_nil: "error" # error or null(default) or empty
    - key: "UserId"
      extractor:
        type: "jmesPath"
        jmes_path: "userId"
        # on_nil: "error" # error or null(default) or empty
    - key: "Name"
      extractor:
        type: "jmesPath"
        jmes_path: "name"
    - key: "Email"
      extractor:
        type: "jmesPath"
        jmes_path: "email"
    - key: "Body"
      extractor:
        type: "jmesPath"
        jmes_path: "@"
  # memory_data:
  #   - key: "userId"
  #     extractor:
  #       type: "jmesPath"
  #       jmes_path: "userId"
  #       on_nil: "error" # error or null(default) or empty
  # store_data:
  #   - bucket_id: "bucketForApp"
  #     store_key: "user"
  #     extractor:
  #       type: "jmesPath"
  #       jmes_path: "@"
  #       on_nil: "error" # error or null(default) or empty
  #     encrypt:
  #       enabled: true
  #       encrypt_id: encryptDynamicCBC

